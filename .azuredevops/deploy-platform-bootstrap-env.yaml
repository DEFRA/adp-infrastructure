parameters:
  - name: deployFromFeature
    displayName: "Deploy from Feature Branch"
    type: boolean
    default: false
  - name: deployResources
    displayName: "Resources to Deploy"
    type: string
    default: "all"
    values:
      - "all"
      - "service-connections"
      - "network"

pr:
  branches:
    include:
      - main
  paths:
    include:
      - infra/bootstrap/env/*
      - infra/common/*

trigger:
  batch: true
  branches:
    include:
      - main
  paths:
    include:
      - infra/bootstrap/env/*
      - infra/common/*

resources:
  repositories:
    - repository: ADPPipelineCommon
      name: DEFRA/adp-pipeline-common
      endpoint: DEFRA
      type: github
      ref: main

extends:
  template: /pipelines/common-infra-deploy.yaml@ADPPipelineCommon
  parameters:
    projectName: $(projectName)
    deployFromFeature: ${{ parameters.deployFromFeature }}
    environments:
      - name: 'snd1'
        serviceConnection: AZD-ADP-SSV3
        deploymentBranches:
          - 'refs/heads/main'
        developmentEnvironment: true
        azureRegions:
          primary: 'UKSouth'
      - name: 'snd2'
        outputTemplateChange: Skip
        serviceConnection: AZD-ADP-SSV3
        dependsOn: Validate
        deploymentBranches:
          - 'refs/heads/main'
          - 'refs/pull/*/merge'
        azureRegions:
          primary: 'UKSouth'
      - name: 'dev1'
        dependsOn: 'snd1'
        outputTemplateChange: Skip
        serviceConnection: AZR-ADP-SSV5
        deploymentBranches:
          - 'refs/heads/main'
        azureRegions:
          primary: 'UKSouth'
      - name: 'tst1'
        dependsOn: 'dev1'
        outputTemplateChange: Skip
        serviceConnection: AZR-ADP-SSV5
        deploymentBranches:
          - 'refs/heads/main'
        azureRegions:
          primary: 'UKSouth'
      - name: 'snd3'
        outputTemplateChange: Skip
        serviceConnection: AZD-ADP-SSV3
        dependsOn: 'snd1'
        deploymentBranches:
          - 'refs/heads/main'
        azureRegions:
          primary: 'UKSouth'
      #- name: 'pre1'
      #  dependsOn: 'tst1'
      #  outputTemplateChange: Skip
      #  serviceConnection: AZR-ADP-SSV5
      #  deploymentBranches:
      #    - 'refs/heads/main'
      #  azureRegions:
      #    primary: 'UKSouth'    
    filePathsForTransform: |
      **/bootstrap/env/config/app-registrations/tier2-app-registration.json
      **/bootstrap/env/config/service-connections/tier2-service-connection.json
      **/bootstrap/env/config/role-assignments/tier2-role-assignments.json
    groupedDeployments:
      - ? ${{ if or(eq(parameters.deployResources, 'all'), eq(parameters.deployResources, 'service-connections')) }}
        : - name: SharedResources
            deployments:
              - name: tier2-role-assignments
                path: infra/bootstrap/env/role-assignment
                parameterFilePath: infra/bootstrap/env/role-assignment
                scope: "Subscription"
                # preDeployScriptsList:
                #   - displayName: Create Tier 2 App Registrations
                #     scriptPath: "PowerShellLibrary/Add-AdAppRegistrations.ps1"
                #     scriptRepo: PipelineCommonScripts
                #     ScriptArguments: >
                #       -AppRegJsonPath '$(Pipeline.Workspace)/s/self/infra/bootstrap/env/config/app-registrations/tier2-app-registration.json'
                # postDeployScriptsList:
                #   - displayName: Create or Update AzureRm Service Endpoint(Service Connection)
                #     Type: AzureCLI
                #     useSystemAccessToken: true
                #     scriptPath: "infra/bootstrap/env/scripts/ado/Initialize-ServiceEndpoint.ps1"
                #     ScriptArguments: >
                #       -ServiceEndpointJsonPath 'infra/bootstrap/env/config/service-connections/tier2-service-connection.json'
                #       -WorkingDirectory $(Pipeline.Workspace)\s\self      

      # - ? ${{ if or(eq(parameters.deployResources, 'all'), eq(parameters.deployResources, 'network')) }}
      #   : - name: network
      #       ${{ if eq(parameters.deployResources, 'all') }}:
      #         dependsOnGroupedDeployments:
      #           - SharedResources
      #       deployments:
      #         - name: route-table
      #           path: infra/common/network
      #           serviceConnectionVariableName: "subscriptionName"
      #           resourceGroupName: $(virtualNetworkResourceGroup)
      #         - name: network-security-group
      #           path: infra/common/network
      #           serviceConnectionVariableName: "subscriptionName"
      #           resourceGroupName: $(virtualNetworkResourceGroup)
      #         - name: virtual-network
      #           path: infra/common/network
      #           serviceConnectionVariableName: "subscriptionName"
      #           resourceGroupName: $(virtualNetworkResourceGroup)
      #           postDeployScriptsList:
      #             - displayName: Link the VNet to Hub
      #               scriptPath: infra/bootstrap/env/scripts/Trigger-VNetPeering.ps1
      #               type: PowerShell
      #               useSystemAccessToken: true
      #               scriptArguments: >
      #                 -VirtualNetworkName $(virtualNetworkName)
      #                 -SubscriptionName $(subscriptionName)
      #                 -TenantId $(tenantId)