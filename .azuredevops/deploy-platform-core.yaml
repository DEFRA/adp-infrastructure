parameters:
  - name: deployFromFeature
    displayName: "Deploy from Feature Branch"
    type: boolean
    default: false
  - name: deployResourceCategory
    displayName: Resource Category to deploy
    type: string
    default: null
    values:
      - all
      - network
      - monitoring
      - frontdoor
      - applicationinfra
      - managedcluster
      - null   # no category
  - name: deployResourceType
    displayName: Resource Type to deploy
    type: string
    default: null
    values:
      - null   # no category
      - nsg
      - udr
      - vnet
      - configurationstore
      - applicationcontainerregistry
      - applicationkeyvault
      - akscluster
      - managedidentity
      - observability
      - rediscache
      - namespace
      - applicationstorageaccount
      - workspace
      - components
      - azurewaf
      - frontdoor
      - flexibleserver
      - grafana

pr:
  branches:
    include:
      - main
  paths:
    include:
      - infra/core/*
      - infra/common/*
trigger:
  batch: true
  branches:
    include:
      - '*'
  paths:
    include:
      - infra/core/*
      - infra/common/*

resources:
  repositories:
    - repository: ADPPipelineCommon
      name: DEFRA/adp-pipeline-common
      endpoint: DEFRA
      type: github
      ref:  main

variables: 
  deployAllResources: or(eq(parameters.deployResourceCategory, 'all'), eq(parameters.deployResourceType, null))
  deployUDR: or(eq(parameters.deployResourceCategory, 'network'), eq(parameters.deployResourceType, 'udr'))
  deployNSG: or(eq(parameters.deployResourceCategory, 'network'), eq(parameters.deployResourceType, 'nsg'))
  deployVNET: or(eq(parameters.deployResourceCategory, 'network'), eq(parameters.deployResourceType, 'vnet'))
  deployWorkspace: or(eq(parameters.deployResourceCategory, 'monitoring'), eq(parameters.deployResourceType, 'workspace'))
  deployComponents: or(eq(parameters.deployResourceCategory, 'monitoring'), eq(parameters.deployResourceType, 'components'))
  deployFrontDoor: or(eq(parameters.deployResourceCategory, 'frontdoor'), eq(parameters.deployResourceType, 'frontdoor'))
  deployAzureWaf: or(eq(parameters.deployResourceCategory, 'frontdoor'), eq(parameters.deployResourceType, 'azurewaf'))
  deployConfigurationStore: or(eq(parameters.deployResourceCategory, 'applicationinfra'), eq(parameters.deployResourceType, 'configurationstore'))
  deployApplicationContainerRegistry: or(eq(parameters.deployResourceCategory, 'applicationinfra'), eq(parameters.deployResourceType, 'applicationcontainerregistry'))
  deployApplicationFlexibleServer: or(eq(parameters.deployResourceCategory, 'applicationinfra'), eq(parameters.deployResourceType, 'flexibleserver'))
  deployApplicationRedisCache: or(eq(parameters.deployResourceCategory, 'applicationinfra'), eq(parameters.deployResourceType, 'rediscache'))
  deployApplicationApplicationStorageAccount: or(eq(parameters.deployResourceCategory, 'applicationinfra'), eq(parameters.deployResourceType, 'applicationstorageaccount'))
  deployAksCluster: and(eq(parameters.deployResourceCategory, 'managedcluster'), eq(parameters.deployResourceType, 'akscluster'))
  deployGrafana: and(eq(parameters.deployResourceCategory,'managedcluster'), eq(parameters.deployResourceType, 'grafana'))
  deployApplicationKeyVault: and(eq(parameters.deployResourceCategory, null), eq(parameters.deployResourceType, 'applicationkeyvault'))
  deloyManagedIdentity: and(eq(parameters.deployResourceCategory, null), eq(parameters.deployResourceType, 'managedidentity'))
  deployNamespace: and(eq(parameters.deployResourceCategory, null), eq(parameters.deployResourceType, 'namespace'))
  deployNone:  and(eq(parameters.deployResourceCategory, null), eq(parameters.deployResourceType, null))

extends:
  template: /pipelines/common-infra-deploy.yaml@ADPPipelineCommon
  parameters:
    projectName: $(projectName)
    deployFromFeature: ${{ parameters.deployFromFeature }}
    environments:
      - name: 'snd2'
        serviceConnection: AZD-CDO-SND2
        deploymentBranches:
          - '*'
        developmentEnvironment: true
        azureRegions:
          primary: 'UKSouth'    
    groupedTemplates:      
      # - ${{ if eq(variables.deloyManagedIdentity, true) }}:  # not initially included in the deployment for all
      - ${{ if eq(variables.deployNamespace, true) }}:
        - name: service_bus
          templates:
            - name: namespace
              path: infra/core/service-bus
              resourceGroupName: $(servicesResourceGroup)
              privateEndpointDnsRecordsForResources:
                - resourceName: $(infraResourceNamePrefix)$(nc_resource_servicebus)$(nc_instance_regionid)01
                  resourceGroupName: $(servicesResourceGroup)

